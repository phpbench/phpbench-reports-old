{% extends "layout.html.twig" %}
{% block title %}
    <p>Suite: <code>{{ suite }}</code></p>
    <h2>{{ benchmark }}::{{ subject }}</h2>
{% endblock %}
{% block content %}
<div class="ui container">
    <div class="ui grid">

        <div class="sixteen wide column">
            <h3 class="ui top attached header">Times</h3>
            <div class="ui attached segment">
                <canvas id="linear" height="100px" ></canvas>
            </div>

            <h3 class="ui top attached header">Distribution</h3>
            <div class="ui attached segment">
                <canvas id="histogram" height="100px"></canvas>
            </div>
        </div>

        <div class="sixteen wide column">

            <table class="ui attached segment table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>µs</th>
                        <th>Z</th>
                        <th>Mem.</th>
                    </tr>
                </thead>
                <tbody>
                    {% for iteration in iterations %}
                    <tr>
                        <td>{{ iteration.index() }}</td>
                        <td>{{ iteration.metric('time', 'net') | round(0) }}</td>
                        <td>{{ iteration.metric('comp', 'z_value') | round(2) }}σ</td>
                        <td>{{ iteration.metric('mem', 'peak') | round(0) }}b</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>

var linearCtx = document.getElementById("linear").getContext('2d');
var linearChart = new Chart(linearCtx, {
    type: 'line',
    data: {
        labels: {{ iterations.indexes() | json_encode | raw }},
        datasets: [
            {
                fill: false,
                borderColor: "rgb(1,123,123)",
                borderWidth: 2,
                label: '# microseconds',
                data: {{ iterations.metrics('time', 'net') | json_encode | raw }},
            }
        ]
    },
    options: {
        annotation: {
            annotations: [
                {
                    type: "line",
                    mode: "horizontal",
                    scaleID: "y-axis-0",
                    value: {{ iterations.mean('time', 'net') }},
                    borderColor: "purple",
                    label: {
                        content: "Mean {{ iterations.mean('time', 'net') | number_format }}",
                        enabled: true,
                        position: "right",
                    }
                },
                {
                    type: "line",
                    mode: "horizontal",
                    scaleID: "y-axis-0",
                    value: {{ iterations.mode('time', 'net') }},
                    borderColor: "violet",
                    label: {
                        content: "Mode {{ iterations.mode('time', 'net') | number_format }}",
                        enabled: true,
                        position: "right"
                    }
                }
            ]
        }
    }
});

{% set histogram = iterations.histogram('time', 'net') %}
{% set kde = iterations.densityEstimation('time', 'net') %}
var histogramCtx = document.getElementById("histogram").getContext('2d');
var histogramChart = new Chart(histogramCtx, {
    type: 'bar',
    data: {
        labels: {{ histogram | keys | json_encode | raw }},
        datasets: [
            {
                fill: false,
                borderColor: "rgb(1,123,123)",
                borderWidth: 2,
                xAxisID: 'microseconds',
                yAxisID: 'count',
                label: '# microseconds',
                data: {{ histogram | values | json_encode | raw }},
            },
            {
                type: 'line',
                borderColor: "rgb(1,23,23)",
                borderWidth: 1,
                label: '# density',
                data: {{ kde | values | json_encode | raw }},
                yAxisID: 'density',
            }
        ],
    },
    options: {
        scales: {
            xAxes: [
                {
                    id: 'microseconds',
                    type: 'category',
                }, 
                {
                    id: 'linearmicroseconds',
                    type: 'linear',
                    ticks: {
                        min: {{ iterations.min('time', 'net') }},
                        max: {{ iterations.max('time', 'net') }},
                    }
                }, 
            ],
            yAxes: [
                {
                    id: 'count',
                    type: 'linear',
                    position: 'left',
                    label: 'count',
                }, 
                {
                    id: 'density',
                    type: 'linear',
                    position: 'right',
                    label: 'kernel density',
                }
            ]
        },
        annotation: {
            annotations: [
                {
                    type: "line",
                    mode: "vertical",
                    scaleID: "linearmicroseconds",
                    value: {{ iterations.mean('time', 'net') }},
                    borderColor: "purple",
                    label: {
                        content: "Mean {{ iterations.mean('time', 'net') | number_format }}",
                        enabled: true,
                        position: "top",
                    }
                },
                {
                    type: "line",
                    mode: "vertical",
                    scaleID: "linearmicroseconds",
                    value: {{ iterations.mode('time', 'net') }},
                    borderColor: "violet",
                    label: {
                        content: "Mode {{ iterations.mode('time', 'net') | number_format }}",
                        enabled: true,
                        position: "top"
                    }
                }
            ]
        }
    }
});
</script>
{% endblock content %}
